/* Create gold user member table */

CREATE TABLE goldusers_signup 
(
  userid integer,
  gold_signup_date date
); 

/* Insert value into column */

INSERT INTO goldusers_signup 
(userid , gold_signup_date )
VALUES
("1", "2017-09-22" ) ,
("3", "2017-04-21") ;

/* Create another table[users] in same schema */

CREATE TABLE users
(
  userid integer,
  signup_date date
); 

/* Insert value into user table column */

INSERT INTO users
(userid , signup_date )
VALUES
("1" , "2014-09-02" ) ,
("2" , "2015-01-15" ) ,
("3" , "2014-04-11" ) ;

/* Create another table [sales] in same schema */

CREATE TABLE sales
(
userid integer,
created_date date,
product_id integer
); 

/* Insert value into  sales table column */
 
 INSERT INTO sales
 (userid,created_date,product_id) 
 VALUES
("1", "2017-04-19", "2" ) ,
("3", "2019-12-18", "1" ) ,
("2", "2020-07-20", "3" ) ,
("1", "2019-10-23", "2" ) ,
("1", "2018-03-19", "3" ) ,
("3", "2016-12-20", "2" ) ,
("1", "2016-11-09", "1" ) ,
("1", "2016-05-20", "3" ) ,
("2", "2017-09-24", "1" ) ,
("1", "2017-03-11", "2" ) ,
("1", "2016-03-11", "1" ) ,
("3", "2016-11-10", "1" ) ,
("3", "2017-12-07", "2" ) ,
("3", "2016-12-15", "2" ) ,
("2", "2017-11-08", "2" ) ,
("2", "2018-09-10", "3" ) ;

/* Create another table [product] in same schema */

CREATE TABLE product
(product_id integer,
product_name text,
price integer); 

/* Insert value into  product table column */

INSERT INTO product
(product_id,product_name,price) 
 VALUES
("1", "p1", "980"),
("2", "p2", "870"),
("3", "p3", "330");


select * from sales ;
select * from product ;
select * from users ;
select * from goldusers_signup ;

/* 1. what is the total amount each customer spent on zomato? */

SELECT a.userid , SUM(b.price) AS Total_price FROM sales a 
INNER JOIN product b ON a.product_id = b.product_id 
GROUP BY userid ;

/* 2. How many days each customer visit zomato? */

SELECT userid , COUNT(created_date) AS num_of_days FROM sales GROUP BY userid ;

/* 3. what was the first product purchased by each customer ? */

SELECT * FROM
(SELECT*, RANK() OVER(PARTITION BY userid ORDER BY created_date) rnk 
FROM sales)a  WHERE rnk = 1 ;
 
/* 4. what is the most purchased item on the menu and how many time was it purchased by all customer ? */

SELECT userid, COUNT(product_id) AS total_product FROM sales WHERE product_id = 
(SELECT product_id FROM sales GROUP BY product_id ORDER BY COUNT(product_id) DESC LIMIT 1 )
GROUP BY userid ;

/* 5. which item was the most popular for each customer ? */

SELECT * FROM
(SELECT * , RANK() OVER (PARTITION BY  userid ORDER BY total_product DESC ) rnk FROM 
(SELECT userid , product_id , COUNT(product_id) AS total_product FROM sales GROUP BY userid,product_id )a)b
WHERE rnk = 1 ;

/* 6. which item purchased first by the customer after they became a member ? */

SELECT * FROM
(SELECT * , RANK() OVER(PARTITION BY userid ORDER BY  created_date) rnk FROM
(SELECT a.userid , a.created_date , a.product_id , b.gold_signup_date FROM sales a INNER JOIN goldusers_signup b ON a.userid = b.userid
WHERE created_date >= gold_signup_date )c )d WHERE rnk = 1;

/* 7.  which item purchased just before the customer became a member ? */

SELECT * FROM
(SELECT * , RANK() OVER(PARTITION BY userid ORDER BY created_date DESC) rnk FROM
(SELECT a.userid , a.created_date , a.product_id , b.gold_signup_date FROM sales a INNER JOIN goldusers_signup b ON a.userid = b.userid
WHERE created_date <= gold_signup_date )c )d WHERE rnk = 1;

/* 8.what is the total orders and amount spent for each member before they became a member?*/

SELECT userid , COUNT(created_date) AS num_of_days , SUM(price) AS total_amt FROM
(SELECT c.* , d.price FROM
(SELECT a.userid , a.created_date , a.product_id , b.gold_signup_date FROM sales a INNER JOIN goldusers_signup b ON a.userid = b.userid
AND created_date <= gold_signup_date )c INNER JOIN product d ON c.product_id = d.product_id)e
GROUP BY userid   ;


/* 9. If buying each point generates for eg 5rs = 2 zomato point and each product has different purchasing points
for eg. for p1 5rs = 1 zomato point, for p2 10rs = 5 zomato point and p3 5rs = 1 zomato point
calculate points collected by each customers and for which product most points have been given till now*/

SELECT userid , SUM(total_points) AS total_points, SUM(total_points) *2.5 AS total_money_earned FROM
(select e.* , round(total_Amt/points,0) AS total_points FROM
(SELECT d.* ,
 CASE WHEN product_id = 1 THEN 5 WHEN product_id = 2 THEN 2 WHEN product_id = 3 THEN 5
 ELSE 0 END AS points FROM
(SELECT c.userid, c.product_id , SUM(price) AS total_amt FROM
(SELECT a.* , b.price FROM sales a INNER JOIN product b ON a.product_id = b.product_id)c
GROUP BY userid , product_id ORDER BY  userid ASC )d)e)f 
GROUP BY userid ;

/*9(i) which product most points have been given till now ? */ 

select * from
(select * , rank() over(order by total_points_earned_product desc ) rnk from
(select product_id, sum(total_points) as total_points_earned_product from
(select e.* , round(total_Amt/points,0) as total_points from
(select d.* ,
 case when product_id = 1 then 5 when product_id = 2 then 2 when product_id = 3 then 5
 else 0 end as points from
(select c.userid, c.product_id , sum(price) as total_amt from 
(select a.* , b.price from sales a inner join product b on a.product_id = b.product_id)c
 group by userid , product_id order by userid asc )d)e)f 
 group by product_id)f)g where rnk = 1 ;

  /* 10. In the first one year after a custome joins the gold program (including their join date)
 irrespective of what the customer has purchased they earn 5 zomato points for every 10rs spent
 who earned more 1 or 3 and what was their points earnings in their first year?
 1 zomato point = 2rupees
 0.5 zomato point = 1rupees  */
 
 SELECT c.* , d.prics * 0.5 AS total_amt FROM
 (SELECT a.userid, a.product_id , a.created_date, b.gold_signup_date FROM sales a LEFT JOIN goldusers_signup b ON a.userid = b.userid 
 AND created_date >= gold_signup_date AND created_date <= dateadd(YEAR , 1 , gold_signup_date))c INNER JOIN product d ON c.product_id = d.product_id ;
 
  /* 11. Rank all the transaction of customer ? */
  
 SELECT *, RANK() OVER(PARTITION BY userid ORDER BY created_date ) rnk FROM sales ;
  
  
  /* 12. rank all the transaction of member who is gold member and for non gold member
  trancastion mark as "na" ? */
  
   SELECT c.* , CASE WHEN gold_signup_date IS NULL THEN "na" ELSE RANK() OVER(PARTITION BY userid ORDER BY created_date DESC) END AS rnk FROM
 (SELECT a.userid , a.created_date ,a.product_id, b.gold_signup_date FROM sales a LEFT JOIN goldusers_signup b ON a.userid = b.userid AND
  created_date >= gold_signup_date)c ;
